<polUni>
  {# Initial configuration section #}
  <fvTenant name="{{ item.Tenant_name }}" status="modified">
    <l3extOut dn="uni/tn-{{ item.Tenant_name }}/out-{{ item.L3Out_name }}"  name="{{ item.L3Out_name }}">
    {# Ignore VRF_name when MSO_L3Out is present and set to yes #}
    {% if (item.MSO_L3Out is defined and item.MSO_L3Out is not true) or (item.MSO_L3Out is not defined) %}
    <l3extRsEctx tnFvCtxName="{{ item.VRF_name }}"/>
    {% endif %}
    <l3extRsL3DomAtt tDn="uni/l3dom-{{ item.L3Domain_name }}"/>
    {% if item.enable_OSPF is defined and item.enable_OSPF %}
    <ospfExtP areaCost="1" areaCtrl="redistribute,summary" areaId="{{ item.OSPF_Area_ID }}" areaType="{{ item.OSPF_Area_Type }}"/>
    {% endif %}
    
    {# Node Profiles #}
    {% for NodeProfile in item.NodeProfiles %}
    <l3extLNodeP name="{{ NodeProfile.NodeProfile_name }}">
      {% for Switch in NodeProfile.Switches %}
      <l3extRsNodeL3OutAtt rtrId="{{ Switch.Switch_Router_ID }}" rtrIdLoopBack="{{ NodeProfile.Router_ID_as_Loopback }}" tDn="topology/pod-{{ Switch.Switch_Pod_ID }}/node-{{ Switch.Switch_Node_ID }}">
        {# Static Routes #}
        {% if NodeProfile.Static_Routes is defined %}
        {% for route in NodeProfile.Static_Routes %}
        <ipRouteP status={% if route.state is defined and route.state == 'absent' %}"deleted"{% else %}""{% endif %} ip="{{ route.Network }}" pref="1">
          <ipNexthopP nhAddr="{{ route.Next_Hop }}" pref="unspecified" type="prefix"/>
        </ipRouteP>            
        {% endfor %}
        {% endif %}
      </l3extRsNodeL3OutAtt> 
      {% endfor %}        

      {# Interface Profiles #}
      {% for InterfaceProfile in NodeProfile.InterfaceProfiles %}
      <l3extLIfP name="{{ InterfaceProfile.InterfaceProfile_name }}">

        {% if item.enable_OSPF is defined and item.enable_OSPF %}
        <ospfIfP authKeyId="1" authType="none">
          <ospfRsIfPol tnOspfIfPolName="OSPF_P2P"/>
        </ospfIfP>
        {% endif %}

        {% for Interface in InterfaceProfile.Interfaces %}
        {% if Interface.Layer2_type == 'vpc' and Interface.Layer3_type == 'svi' %}
        <l3extRsPathL3OutAtt addr="0.0.0.0" encap="vlan-{{ Interface.VLAN_ID }}" ifInstT="ext-svi" mtu="{{ Interface.MTU }}" tDn="topology/pod-{{ Interface.Switch_Pod_ID }}/protpaths-{{ Interface.Switch_Node_IDs[0] }}-{{ Interface.Switch_Node_IDs[1] }}/pathep-[{{ Interface.vPC_Policy_Group }}]">
          <l3extMember addr="{{ Interface.IP_Address_B_Mask }}" side="B"/>
          <l3extMember addr="{{ Interface.IP_Address_A_Mask }}" side="A">
            <l3extIp addr="{{ Interface.IP_Address_VIP_Mask }}"/>
          </l3extMember>
        {% elif Interface.Layer2_type == 'port-channel' %}
        <l3extRsPathL3OutAtt addr="{{ Interface.IP_Address_Mask }}" encap="vlan-{{ Interface.VLAN_ID }}" ifInstT={% if Interface.Layer3_type == 'sub-interface' %}"sub-interface"{% elif Interface.Layer3_type == 'svi' %}"ext-svi"{% endif %} mtu="{{ Interface.MTU }}" tDn="topology/pod-{{ Interface.Switch_Pod_ID }}/paths-{{ Interface.Switch_Node_ID }}/pathep-[{{ Interface.PC_Policy_Group }}]">
        {% elif Interface.Layer2_type == 'single-port' %}
        <l3extRsPathL3OutAtt addr="{{ Interface.IP_Address_Mask }}" encap="vlan-{{ Interface.VLAN_ID }}" ifInstT={% if Interface.Layer3_type == 'sub-interface' %}"sub-interface"{% elif Interface.Layer3_type == 'svi' %}"ext-svi"{% endif %} mtu="{{ Interface.MTU }}" tDn="topology/pod-{{ Interface.Switch_Pod_ID }}/paths-{{ Interface.Switch_Node_ID }}/pathep-[eth1/{{ Interface.Port }}]">
        {% endif %}

          {% if item.enable_BGP is defined and item.enable_BGP and Interface.BGP_Peers is defined %}
          {% for BGP_Peer in Interface.BGP_Peers %}
          <bgpPeerP addr="{{ BGP_Peer.Peer_IP }}" ctrl="send-com,send-ext-com" {% if BGP_Peer.Password is defined %}password="{{ BGP_Peer.Password }}"{% endif %} {% if BGP_Peer.enable_BFD is defined and BGP_Peer.enable_BFD == true %}peerCtrl="bfd"{% elif BGP_Peer.enable_BFD is defined %}peerCtrl=""{% endif %}>
            <bgpRsPeerPfxPol tnBgpPeerPfxPolName=""/>
            {% if BGP_Peer.Local_AS is defined %}
            <bgpLocalAsnP localAsn="{{ BGP_Peer.Local_AS }}" />
            {% endif %}
            <bgpAsP asn="{{ BGP_Peer.Remote_AS }}"/>
          </bgpPeerP>
          {% endfor %}
          {% endif %}

        </l3extRsPathL3OutAtt>
        {% endfor %}

      </l3extLIfP>
      {# End of Interface Profiles #}
      {% endfor %}

    </l3extLNodeP>
    {# End of Node Profiles #}
    {% endfor %}

    {# External EPGs #}
    {# Ignore VRF_name when MSO_L3Out is present and set to yes #}
    {% if (item.MSO_L3Out is defined and item.MSO_L3Out is not true) or (item.MSO_L3Out is not defined) %}
    {% if item.ExtEPGs is defined %}
      {% for ExtEPG in item.ExtEPGs %}
      <l3extInstP name={% if ExtEPG.ExtEPG_name is defined %}"{{ ExtEPG.ExtEPG_name }}"{% else %}"ExtEPG"{% endif %}>
        <l3extSubnet ip="0.0.0.0/0" scope="import-security"/>
      </l3extInstP>
      {% endfor %}
    {% else %}
    <l3extInstP name="ExtEPG">
      <l3extSubnet ip="0.0.0.0/0" scope="import-security"/>
    </l3extInstP>
    {% endif %}
    {% endif %}

    {% if item.enable_BGP is defined and item.enable_BGP %}
    <bgpExtP/>
    {% endif %}
   </l3extOut>
    {% if item.enable_OSPF is defined and item.enable_OSPF %}
    <ospfIfPol cost="unspecified" ctrl="mtu-ignore" deadIntvl="6" dn="uni/tn-{{ item.Tenant_name }}/ospfIfPol-OSPF_P2P" helloIntvl="2" name="OSPF_P2P" nameAlias="" nwT="p2p" ownerKey="" pfxSuppress="inherit" prio="1" rexmitIntvl="5" xmitDelay="1"/>
    {% endif %}
  </fvTenant>  
</polUni>