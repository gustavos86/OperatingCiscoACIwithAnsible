# Ansible
# https://docs.ansible.com/ansible/latest/collections/cisco/aci/aci_bd_module.html#ansible-collections-cisco-aci-aci-bd-module
# APIC
# Tenants > Tenant > Networking > Bridge Domains
- name: Bridge Domains
  ignore_errors: yes
  cisco.aci.aci_bd:
    hostname: "{{ ansible_host }}"
    username: "{{ username }}"
    password: "{{ password }}"
    validate_certs: no
    tenant: "{{ item.Tenant_name }}"
    vrf: "{{ item.VRF_name | default(omit) }}"
    bd: "{{ item.BD_name }}"
    enable_routing: "{% if item.bd_type is defined and item.bd_type == 'fc' %}no{% else %}{{ item.enable_routing | default(omit) }}{% endif %}"
    mac_address: "{{ Gateway_MAC_address | default(omit) }}"
    arp_flooding: "{{ item.arp_flooding | default(omit) }}"
    l2_unknown_unicast: "{{ item.l2_unknown_unicast | default(omit) }}"
    l3_unknown_multicast: "{{ item.l3_unknown_multicast | default(omit) }}"
    bd_type: "{{ item.bd_type | default(omit) }}"
    state: "{{ item.bd_state | default('present', true) }}"
  with_items: "{{ BridgeDomains_Subnets }}"
  loop_control:
    pause: "{{ loop_control_pause | default(0) }}"

# Ansible
# https://docs.ansible.com/ansible/latest/collections/cisco/aci/aci_bd_subnet_module.html#ansible-collections-cisco-aci-aci-bd-subnet-module
# APIC
# Tenants > Tenant > Networking > Bridge Domains > Subnets
- name: Bridge Domain Subnets
  ignore_errors: yes
  cisco.aci.aci_bd_subnet:
    hostname: "{{ ansible_host }}"
    username: "{{ username }}"
    password: "{{ password }}"
    validate_certs: no
    tenant: "{{ item.Tenant_name }}"
    bd: "{{ item.BD_name }}"
    gateway: "{{ item.bd_subnet }}"
    mask: "{{ item.bd_subnet_mask }}"
    scope: "{{ item.scope | default(omit) }}"
    state: "{{ whattodo | default('present', true) }}"
  with_items: "{{ BridgeDomains_Subnets }}"
  when: item.bd_subnet is defined and item.bd_subnet_mask is defined
  loop_control:
    pause: "{{ loop_control_pause | default(0) }}"